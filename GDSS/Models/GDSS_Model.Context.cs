//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace GDSS.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class GDSS_DBEntities : DbContext
    {
        public GDSS_DBEntities()
            : base("name=GDSS_DBEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Discussion> Discussions { get; set; }
        public virtual DbSet<Forum> Fora { get; set; }
        public virtual DbSet<ForumComment> ForumComments { get; set; }
        public virtual DbSet<ForumReply> ForumReplies { get; set; }
        public virtual DbSet<Moderator> Moderators { get; set; }
        public virtual DbSet<Participant> Participants { get; set; }
        public virtual DbSet<Poll> Polls { get; set; }
        public virtual DbSet<PollOption> PollOptions { get; set; }
        public virtual DbSet<PollVote> PollVotes { get; set; }
        public virtual DbSet<Username> Usernames { get; set; }
    
        public virtual int RegisterParticipant(string token, string username)
        {
            var tokenParameter = token != null ?
                new ObjectParameter("token", token) :
                new ObjectParameter("token", typeof(string));
    
            var usernameParameter = username != null ?
                new ObjectParameter("username", username) :
                new ObjectParameter("username", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("RegisterParticipant", tokenParameter, usernameParameter);
        }
    
        public virtual int RegisterVote(Nullable<int> polloptionid, Nullable<int> userid)
        {
            var polloptionidParameter = polloptionid.HasValue ?
                new ObjectParameter("polloptionid", polloptionid) :
                new ObjectParameter("polloptionid", typeof(int));
    
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("RegisterVote", polloptionidParameter, useridParameter);
        }
    }
}
